name: Push the Docker image to AWS ECR Repo
on:
  push:
    branches:
      - deploy
jobs:
  Build:
    name: Build
    runs-on: ubuntu-latest
    outputs:
      ecr-registry: ${{ steps.login-ecr-public.outputs.registry }}  # Output the registry name
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR Public
        id: login-ecr-public
        uses: aws-actions/amazon-ecr-login@v2
        with:
          registry-type: public

      - name: Get commit hash
        id: get-commit-hash
        run: echo "::set-output name=commit-hash::$(git rev-parse --short HEAD)"

      - name: Build, tag, and push the image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr-public.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.REPO_NAME }}
          IMAGE_TAG:  h5shop-backend-${{ steps.get-commit-hash.outputs.commit-hash }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

  Deploy:
    name: Deploy to EC2
    runs-on: ubuntu-latest
    needs: Build  # Add a dependency on the Build job to access its outputs
    steps:
      - uses: actions/checkout@v2

      - name: Get commit hash
        id: get-commit-hash
        run: echo "::set-output name=commit-hash::$(git rev-parse --short HEAD)"

      - name: Build & Deploy
        env:
          PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          HOSTNAME: ${{ secrets.SSH_HOST }}
          USER_NAME: ${{ secrets.SSH_USER_NAME }}
        run: |
          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
          ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOSTNAME} '
              APP_NAME=h5shop &&
              docker rm -f ${APP_NAME} &&
              echo pull &&
              docker pull ${{ needs.Build.outputs.ecr-registry }}/${{ secrets.REPO_NAME }}:h5shop-backend-${{ steps.get-commit-hash.outputs.commit-hash }} &&
              docker run -d --name ${APP_NAME} \
              --network h5shop \
              -e SYSTEM_SECRET=${{ secrets.SYSTEM_SECRET }} \
              -e MYSQL_HOST=${{ secrets.MYSQL_HOST }} \
              -e MYSQL_USER=${{ secrets.MYSQL_USER }} \
              -e MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }} \
              -e MYSQL_DATABASE=${{ secrets.MYSQL_DATABASE }} \
              -e VIRTUAL_HOST="api.h5shop.shop" \
              -e LETSENCRYPT_HOST="api.h5shop.shop" \
              -e LETSENCRYPT_EMAIL="caovanhoang204@gmail.com" \
              -p 3000:3000 \
              ${{ needs.Build.outputs.ecr-registry }}/${{ secrets.REPO_NAME }}:h5shop-backend-${{ steps.get-commit-hash.outputs.commit-hash }}
          '

  
