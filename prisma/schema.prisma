generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["prismaSchemaFolder"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Auth {
  id        Int       @id @default(autoincrement())
  userId    Int       @map("user_id")
  userName  String    @unique(map: "user_name") @map("user_name") @db.VarChar(255)
  salt      String    @db.VarChar(50)
  password  String    @db.VarChar(100)
  createdAt DateTime? @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt DateTime? @default(now()) @map("updated_at") @db.DateTime(0)

  @@index([userId], map: "user_id")
  @@map("auth")
}

model Bill {
  id        Int       @id @default(autoincrement())
  orderId   Int       @map("order_id")
  cashierId Int       @map("cashier_id")
  amount    Decimal   @default(0.00) @db.Decimal(15, 2)
  status    Int?      @default(1)
  createdAt DateTime? @default(now()) @map("created_at") @db.Timestamp(0)
  updatedAt DateTime? @default(now()) @map("updated_at") @db.Timestamp(0)

  @@index([cashierId], map: "casher_id")
  @@index([orderId], map: "order_id")
  @@index([status], map: "status")
  @@map("bill")
}

model Category {
  id          Int       @id @default(autoincrement())
  name        String?   @db.VarChar(255)
  description String?   @db.Text
  metadata    Json?
  images      Json?
  status      Int?      @default(1)
  createdAt   DateTime? @default(now()) @map("created_at") @db.Timestamp(0)
  updatedAt   DateTime? @default(now()) @map("updated_at") @db.Timestamp(0)

  @@index([status], map: "status")
  @@map("category")
}

model CategoryToSpu {
  categoryId Int       @map("category_id")
  spuId      Int       @map("spu_id")
  createdAt  DateTime? @default(now()) @map("created_at") @db.Timestamp(0)

  @@id([categoryId, spuId])
  @@index([spuId], map: "spu_id")
  @@map("category_to_spu")
}

model Customer {
  id          Int            @id @default(autoincrement())
  phoneNumber String?        @map("phone_number") @db.VarChar(20)
  address     String?        @db.VarChar(255)
  firstName   String         @map("first_name") @db.VarChar(255)
  lastName    String         @map("last_name") @db.VarChar(255)
  dateOfBirth DateTime?      @map("date_of_birth") @db.Date
  gender      CustomerGender @default(other)
  status      Int?           @default(1)
  createdAt   DateTime?      @default(now()) @map("created_at") @db.Timestamp(0)
  updatedAt   DateTime?      @default(now()) @map("updated_at") @db.Timestamp(0)

  @@index([status], map: "status")
  @@map("customer")
}

model InventoryReport {
  id             Int       @id @default(autoincrement())
  warehouseMan_1 Int       @map("warehouse_man_1")
  warehouseMan_2 Int?      @map("warehouse_man_2")
  warehouseMan_3 Int?      @map("warehouse_man_3")
  status         Int?      @default(1)
  updatedAt      DateTime? @default(now()) @map("updated_at") @db.Timestamp(0)
  createdAt      DateTime? @default(now()) @map("created_at") @db.Timestamp(0)

  @@index([status], map: "status")
  @@map("inventory_report")
}

model InventoryReportDetail {
  id                Int       @id @default(autoincrement())
  inventoryReportId Int       @map("inventory_report_id")
  skuId             Int       @map("sku_id")
  amount            Int
  inventoryDif      Int       @default(0) @map("inventory_dif")
  isTrue            Boolean   @default(true) @map("is_true")
  status            Int?      @default(1)
  createdAt         DateTime? @default(now()) @map("created_at") @db.Timestamp(0)

  @@index([inventoryReportId], map: "inventory_report_id")
  @@index([isTrue], map: "is_true")
  @@index([skuId], map: "sku_id")
  @@index([status], map: "status")
  @@map("inventory_report_detail")
}

model Order {
  id         Int            @id @default(autoincrement())
  customerId Int            @map("customer_id")
  sellerId   Int            @map("seller_id")
  status     Int?           @default(1)
  orderType  OrderOrderType @default(retail) @map("order_type")
  createdAt  DateTime?      @default(now()) @map("created_at") @db.Timestamp(0)
  updatedAt  DateTime?      @default(now()) @map("updated_at") @db.Timestamp(0)

  @@index([customerId], map: "customer_id")
  @@index([sellerId], map: "seller_id")
  @@index([status], map: "status")
  @@map("order")
}

model OrderItem {
  id        BigInt    @id
  orderId   Int       @map("order_id")
  skuId     Int       @map("sku_id")
  amount    Int       @default(1)
  unitPrice Decimal?  @default(0.00) @map("unit_price") @db.Decimal(15, 2)
  createdAt DateTime? @default(now()) @map("created_at") @db.Timestamp(0)

  @@unique([orderId, skuId], map: "order_id")
  @@index([skuId], map: "sku_id")
  @@map("order_item")
}

model Payment {
  id            Int                   @id @default(autoincrement())
  billId        Int                   @map("bill_id")
  paymentMethod PaymentPaymentMethod? @map("payment_method")
  state         PaymentState?
  status        Int?                  @default(1)
  createdAt     DateTime?             @default(now()) @map("created_at") @db.Timestamp(0)
  updatedAt     DateTime?             @default(now()) @map("updated_at") @db.Timestamp(0)

  @@index([status], map: "status")
  @@map("payment")
}

model Provider {
  id          Int       @id @default(autoincrement())
  name        String?   @db.VarChar(255)
  address     String?   @db.VarChar(255)
  email       String?   @db.VarChar(255)
  phoneNumber String?   @map("phone_number") @db.VarChar(20)
  status      Int?      @default(1)
  createdAt   DateTime? @default(now()) @map("created_at") @db.Timestamp(0)
  updatedAt   DateTime? @default(now()) @map("updated_at") @db.Timestamp(0)

  @@index([status], map: "status")
  @@map("provider")
}

model Sku {
  id        Int       @id @default(autoincrement())
  skuNo     String    @map("sku_no") @db.VarChar(32)
  images    Json?
  price     Decimal   @default(0.00) @db.Decimal(15, 2)
  stock     Int       @default(0)
  status    Int?      @default(1)
  createdAt DateTime? @default(now()) @map("created_at") @db.Timestamp(0)
  updatedAt DateTime? @default(now()) @map("updated_at") @db.Timestamp(0)

  @@index([skuNo], map: "sku_no")
  @@index([status], map: "status")
  @@map("sku")
}

model SkuAttr {
  id          Int              @id @default(autoincrement())
  spuId       Int              @map("spu_id")
  name        String?          @db.VarChar(255)
  description String?          @db.Text
  dataType    SkuAttrDataType? @map("data_type")
  value       Json?
  status      Int?             @default(1)
  createdAt   DateTime?        @default(now()) @map("created_at") @db.Timestamp(0)
  updatedAt   DateTime?        @default(now()) @map("updated_at") @db.Timestamp(0)

  @@index([spuId], map: "spu_id")
  @@index([status], map: "status")
  @@map("sku_attr")
}

model SkuToAttr {
  skuAttrId Int       @map("sku_attr_id")
  skuId     Int       @map("sku_id")
  status    Int?      @default(1)
  createdAt DateTime? @default(now()) @map("created_at") @db.Timestamp(0)

  @@id([skuAttrId, skuId])
  @@index([status], map: "status")
  @@map("sku_to_attr")
}

model SkuToSpu {
  spuId     Int       @map("spu_id")
  skuId     Int       @map("sku_id")
  createdAt DateTime? @default(now()) @map("created_at") @db.Timestamp(0)

  @@id([spuId, skuId])
  @@index([skuId], map: "sku_id")
  @@map("sku_to_spu")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model SkuWholesalePrices {
  id          Int     @id @default(autoincrement())
  skuId       Int     @map("sku_id")
  minQuantity Int     @map("min_quantity")
  price       Decimal @db.Decimal(15, 2)

  @@index([skuId], map: "sku_id")
  @@map("sku_wholesale_prices")
}

model Spu {
  id          Int       @id @default(autoincrement())
  name        String?   @db.VarChar(255)
  description String?   @db.Text
  metadata    Json?
  images      Json?
  outOfStock  Boolean   @default(false) @map("out_of_stock")
  status      Int?      @default(1)
  createdAt   DateTime? @default(now()) @map("created_at") @db.Timestamp(0)
  updatedAt   DateTime? @default(now()) @map("updated_at") @db.Timestamp(0)

  @@index([status], map: "status")
  @@map("spu")
}

model SpuToProvider {
  providerId Int       @map("provider_id")
  spuId      Int       @map("spu_id")
  createdAt  DateTime? @default(now()) @map("created_at") @db.Timestamp(0)

  @@id([providerId, spuId])
  @@index([spuId], map: "spu_id")
  @@map("spu_to_provider")
}

model StockIn {
  id           Int       @id @default(autoincrement())
  providerId   Int       @map("provider_id")
  warehouseMen Int       @map("warehouse_men")
  status       Int?      @default(1)
  updatedAt    DateTime? @default(now()) @map("updated_at") @db.Timestamp(0)
  createdAt    DateTime? @default(now()) @map("created_at") @db.Timestamp(0)

  @@index([providerId], map: "provider_id")
  @@index([status], map: "status")
  @@index([warehouseMen], map: "warehouse_men")
  @@map("stock_in")
}

model StockInDetail {
  id        Int       @id @default(autoincrement())
  stockInId Int       @map("stock_in_id")
  skuId     Int       @map("sku_id")
  amount    Int       @default(1)
  createdAt DateTime? @default(now()) @map("created_at") @db.Timestamp(0)
  status    Int?      @default(1)

  @@index([skuId], map: "sku_id")
  @@index([status], map: "status")
  @@index([stockInId], map: "stock_in_id")
  @@map("stock_in_detail")
}

model StockOut {
  id               Int       @id @default(autoincrement())
  warehouseMen     Int       @map("warehouse_men")
  stockOutReasonId Int       @map("stock_out_reason_id")
  status           Int?      @default(1)
  updatedAt        DateTime? @default(now()) @map("updated_at") @db.Timestamp(0)
  createdAt        DateTime? @default(now()) @map("created_at") @db.Timestamp(0)

  @@index([status], map: "status")
  @@index([stockOutReasonId], map: "stock_out_reason_id")
  @@index([warehouseMen], map: "warehouse_men")
  @@map("stock_out")
}

model StockOutDetail {
  id         Int       @id @default(autoincrement())
  stockOutId Int       @map("stock_out_id")
  skuId      Int       @map("sku_id")
  amount     Int       @default(1)
  updatedAt  DateTime? @default(now()) @map("updated_at") @db.Timestamp(0)
  createdAt  DateTime? @default(now()) @map("created_at") @db.Timestamp(0)
  status     Int?      @default(1)

  @@index([skuId], map: "sku_id")
  @@index([status], map: "status")
  @@index([stockOutId], map: "stock_out_id")
  @@map("stock_out_detail")
}

model StockOutReason {
  id          Int       @id @default(autoincrement())
  name        String    @db.VarChar(255)
  description String?   @db.Text
  status      Int?      @default(1)
  updatedAt   DateTime? @default(now()) @map("updated_at") @db.Timestamp(0)
  createdAt   DateTime? @default(now()) @map("created_at") @db.Timestamp(0)

  @@index([status], map: "status")
  @@map("stock_out_reason")
}

model User {
  id          Int             @id @default(autoincrement())
  phoneNumber String?         @map("phone_number") @db.VarChar(20)
  userName    String          @unique(map: "user_name") @map("user_name") @db.VarChar(255)
  email       String?         @unique(map: "email") @db.VarChar(255)
  address     String?         @db.VarChar(255)
  firstName   String          @map("first_name") @db.VarChar(255)
  lastName    String          @map("last_name") @db.VarChar(255)
  dateOfBirth DateTime?       @map("date_of_birth") @db.Date
  gender      UserGender      @default(other)
  systemRole  UserSystemRole? @map("system_role")
  avatar      Json?
  status      Int?            @default(1)
  createdAt   DateTime?       @default(now()) @map("created_at") @db.Timestamp(0)
  updatedAt   DateTime?       @default(now()) @map("updated_at") @db.Timestamp(0)

  @@index([status], map: "status")
  @@map("user")
}

model WarrantyForm {
  id          Int       @id @default(autoincrement())
  orderItemId Int       @map("order_item_id")
  amount      Int       @default(0)
  status      Int?      @default(1)
  createdAt   DateTime? @default(now()) @map("created_at") @db.Timestamp(0)
  updatedAt   DateTime? @default(now()) @map("updated_at") @db.Timestamp(0)

  @@index([orderItemId], map: "order_item_id")
  @@index([status], map: "status")
  @@map("warranty_form")
}

enum PaymentPaymentMethod {
  cash
  banking

  @@map("payment_payment_method")
}

enum PaymentState {
  pending
  success
  failed

  @@map("payment_state")
}

enum OrderOrderType {
  retail
  wholesale

  @@map("order_order_type")
}

enum SkuAttrDataType {
  text
  number
  boolean

  @@map("sku_attr_data_type")
}

enum CustomerGender {
  male
  female
  other

  @@map("customer_gender")
}

enum UserGender {
  male
  female
  other

  @@map("user_gender")
}

enum UserSystemRole {
  admin
  owner
  sale_staff
  warehouse_staff
  technical_staff
  finance_staff

  @@map("user_system_role")
}
